@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <a href="#" data-toggle="modal" data-target="#createItemModal">
                <strong>Add New Item</strong>
            </a>
            <span class="mx-2 pipe-separator">|</span>
            <a href="#" id="toggleCompletedItems">
                <strong>Hide Completed Items</strong>
            </a>
            <span class="mx-2 pipe-separator">|</span>
            <a href="#" id="orderByRank">
                <strong>Rank - Low to High</strong>
            </a>
        </li>

        <li class="list-group-item">
            <div class="row">
                <div class="col-md-4 text-center text-primary">Task</div>
                <div class="col-md-4 text-center text-primary">Rank</div>
                <div class="col-md-4 text-center text-primary">Assigned To</div>
            </div>

        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">

                <div class="row">

                    <div class="col-md-4">
                        <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                            @if (item.IsDone)
                            {
                                <s>@item.Title</s>
                                <input type="hidden" asp-for="@item.IsDone" />
                            }
                            else
                            {
                                <text>@item.Title</text>
                            }
                        </a>
                    </div>

                    <div class="col-md-4 text-center">                      
                        <span class="rank-value">@item.Rank</span>
                        <input type="text" class="form-control rank-input" value="@item.Rank" style="display: none; width: 50px;" data-todo-item-id="@item.TodoItemId">
                        <i class="bi bi-pencil edit-rank"></i>
                    </div>

                    <div class="col-md-4 text-right">
                        <small>
                            @item.ResponsibleParty.UserName

                            <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />

                        </small>
                    </div>
                </div>
            </li>
        }
    </ul>


    <div class="modal fade" id="createItemModal" tabindex="-1" role="dialog" aria-labelledby="createItemModalLabel" aria-hidden="true" data-todo-list-id="@Model.TodoListId">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createItemModalLabel">Add New Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var getTodoItemFormPartialViewUrl = '@Url.Action("GetTodoItemFormPartialView", "TodoItem")';
    var pathToDoItemUrl = '@Url.Action("Patch", "TodoItem")';

</script>

@section scripts {
    <script src="~/js/todolistdetails.js"></script>
}